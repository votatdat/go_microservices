services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    depends_on:
      mongo:
        condition: service_healthy
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_started

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    env_file:
      - ./.mongo.env

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    env_file:
      - ./.postgres.env

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    env_file:
      - ./.mail.env

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_started
  postgres:
    image: 'postgres:14'
    ports:
      - "5432:5432"
    env_file:
      - ./.postgres.env
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    env_file:
      - ./.mongo.env
    volumes:
      - ./db-data/mongo/:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10

  mongo-express:
    image: 'mongo-express:latest'
    container_name: mongo-express
    restart: always
    ports:
      - "3001:8081"
    env_file:
      - ./.mongo.env
    depends_on:
      mongo:
        condition: service_healthy

  mailhog:
    image: 'mailhog/mailhog:latest'
    container_name: mailhog
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"

  rabbitmq:
    image: 'rabbitmq:3.13.7-alpine'
    restart: always
    ports:
      - "5672:5672"
    volumes: 
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
